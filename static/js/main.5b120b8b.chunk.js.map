{"version":3,"sources":["components/menu-list-item/index.js","components/menu-list-item/menu-list-item.jsx","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.jsx","components/hoc/index.js","components/hoc/with-resto-service.jsx","actions/index.js","components/spinner/index.js","components/spinner/spinner.jsx","components/error/index.js","components/error/error.jsx","components/menu-list/menu-list.jsx","components/menu-list/index.js","components/pages/main-page.jsx","components/cart-table/cart-table.jsx","components/cart-table/index.js","components/pages/cart-page.jsx","components/pages/img/404.png","components/pages/notFound.jsx","components/app-header/shopping-cart-solid.svg","components/app-header/index.js","components/app-header/app-header.jsx","components/technical/getProduct.jsx","components/products/cesarSalad.jsx","components/products/pizzaMargherita.jsx","components/products/pizzaNapoletana.jsx","components/products/greeceSalad.jsx","components/products/cowboySteak.jsx","components/app/food-bg.jpg","components/app/index.js","components/app/app.jsx","components/error-boundry/index.js","components/error-boundry/error-boundry.jsx","components/json/db.js","services/resto-service.js","reducers/index.js","store.js","index.js"],"names":["MenuListItem","item","onAddToCard","title","price","url","category","id","classTitle","className","to","String","src","alt","onClick","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","Consumer","RestoService","menuLoaded","newMenu","type","payload","Spinner","Error","MenuList","this","menuRequested","menuError","getDataDB","menu","menuItems","loading","error","addedToCard","Component","View","map","connect","state","dispatch","MainPage","WithOrder","arr","deleteFromCard","qtty","setOrder","generateOrder","WithoutOrders","items","CartTable","length","CartPage","NotFound","img","AppHeader","totalPrice","total","cartIcon","GetProduct","getMenuItems","then","result","catch","productCard","CesarSalad","cardNumber","location","pathname","replace","Number","PizzaMargherita","PizzaNapoletana","GreeceSalad","CowboySteak","App","style","background","Background","path","exact","component","ErrorBoundry","setState","children","DataDB","_apiBase","a","fetch","response","ok","status","json","getResource","order","getOrderNumber","number","newOrder","method","headers","body","JSON","stringify","res","orderNumber","initialState","quantity","reducer","actions","addId","addItem","itemInd","findIndex","itemInState","find","newItem","slice","arrWithout","removeId","itemIndex","forEach","push","store","createStore","restoService","ReactDOM","render","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.5b120b8b.chunk.js","sourcesContent":["import MenuListItem from './menu-list-item.jsx';\nexport default MenuListItem;","import React from 'react';\nimport './menu-list-item.scss';\nimport {Link} from \"react-router-dom\";\n\nconst MenuListItem = ({item, onAddToCard}) => {\n    const {title, price, url, category, id} = item;\n    let classTitle = `menu__title menu__title-${category}`\n\n    return (\n            <li className=\"menu__item\">\n                <Link className='menu__link-to-product' to={String(id)}>\n                    <div className={classTitle}>{title}</div>\n                    <img className=\"menu__img\" src={url} alt={title}></img>\n                    <div className=\"menu__category\">Category: <span>{category}</span></div>\n                    <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                </Link>\n\n                <button\n                    onClick={() => onAddToCard()}\n                    className=\"menu__btn\"\n                >Add to cart</button>\n            </li>\n    )\n}\n\nexport default MenuListItem;","import RestoServiceContext from './resto-service-context.jsx';\n\nexport default RestoServiceContext;","import React from \"react\";\n\nconst RestoServiceContext = React.createContext();\n\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service.jsx';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return(\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Wrapped\n                            {...props}\n                            RestoService={RestoService}\n                        />\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    }\n};\n\nexport default WithRestoService;","const menuLoaded = (newMenu) => {\n    return {\n        type: 'MENU_LOADED',\n        payload: newMenu\n    }\n};\n\nconst menuRequested = () => {\n    return {\n        type: 'MENU_REQUESTED'\n    }\n};\n\nconst menuError = () => {\n    return {\n        type: 'MENU_ERROR'\n    }\n};\n\nconst addedToCard = (id) => {\n    return {\n        type: 'ITEM_ADD_TO_CARD',\n        payload: id\n    }\n};\n\nconst deleteFromCard = (id) => {\n    return {\n        type: 'ITEM_REMOVE_FROM _CARD',\n        payload: id\n    }\n};\n\nexport {\n    menuLoaded,\n    menuRequested,\n    menuError,\n    addedToCard,\n    deleteFromCard\n}","import Spinner from './spinner.jsx';\n\nexport default Spinner;","import React from 'react';\n\nconst Spinner = () => {\n    return <div className=\"spinner\">loading...</div>\n}\n\nexport default Spinner;","import Error from './error.jsx';\n\nexport default Error;","import React from 'react';\n\nconst Error = () => {\n    return <div className=\"error\">Error</div>\n}\n\nexport default Error;","import React, {Component} from 'react';\nimport MenuListItem from '../menu-list-item';\nimport {connect} from \"react-redux\";\nimport WithRestoService from \"../hoc\";\nimport {menuLoaded, menuRequested, menuError, addedToCard} from \"../../actions\";\nimport Spinner from \"../spinner\";\nimport Error from \"../error\";\nimport './menu-list.scss';\n\nclass MenuList extends Component {\n\n    componentDidMount() {\n        const {RestoService, menuLoaded, menuRequested, menuError} = this.props;\n\n        menuRequested();\n\n        // Для работы с локальным объектом\n        const localDB = RestoService.getDataDB();\n        menuLoaded(localDB.menu)\n\n        // Для работы с сервером\n        // RestoService.getMenuItems()\n        //     .then(result => menuLoaded(result))\n        //     .catch(() => menuError())\n    }\n\n    render() {\n        const {menuItems, loading, error, addedToCard} = this.props;\n\n        if (error) return <Error />\n        if (loading) return <Spinner />\n\n        return (\n            <View menuItems={menuItems} addedToCard={addedToCard}/>\n        )\n    }\n}\n\n// настройка функции высшего порядка connect()\nconst mapStateToProps = (state) => {\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        menuLoaded: (newMenu) => {\n            dispatch(menuLoaded(newMenu));\n        },\n        menuRequested: () => {\n            dispatch(menuRequested());\n        },\n        menuError: () => {\n            dispatch(menuError());\n        },\n        addedToCard: (id) => {\n            dispatch(addedToCard(id))\n        }\n    }\n};\n\nconst View = ({menuItems, addedToCard}) => {\n    return(\n        <ul className=\"menu__list\">\n            {\n                menuItems.map(item => {\n                    return <MenuListItem\n                        key={item.id}\n                        item={item}\n                        onAddToCard={() => addedToCard(item.id)}/>\n                })\n            }\n        </ul>\n    )\n};\n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(MenuList));\n\n\n// class MenuList extends Component {\n//\n//     componentDidMount() {\n//         const {RestoService, menuLoaded, menuRequested, menuError} = this.props;\n//\n//         menuRequested();\n//\n//         RestoService.getMenuItems()\n//             .then(result => menuLoaded(result))\n//             .catch(() => menuError())\n//     }\n//\n//     render() {\n//         const {menuItems, loading, error, addedToCard} = this.props;\n//\n//         if (error) return <Error />\n//         if (loading) return <Spinner />\n//\n//         return (\n//             <View menuItems={menuItems} addedToCard={addedToCard}/>\n//         )\n//     }\n// }\n//\n// // настройка функции высшего порядка connect()\n// const mapStateToProps = (state) => {\n//     return {\n//         menuItems: state.menu,\n//         loading: state.loading,\n//         error: state.error\n//     }\n// };\n//\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         menuLoaded: (newMenu) => {\n//             dispatch(menuLoaded(newMenu));\n//         },\n//         menuRequested: () => {\n//             dispatch(menuRequested());\n//         },\n//         menuError: () => {\n//             dispatch(menuError());\n//         },\n//         addedToCard: (id) => {\n//             dispatch(addedToCard(id))\n//         }\n//     }\n// };\n//\n// const View = ({menuItems, addedToCard}) => {\n//     return(\n//         <ul className=\"menu__list\">\n//             {\n//                 menuItems.map(item => {\n//                     return <MenuListItem\n//                         key={item.id}\n//                         item={item}\n//                         onAddToCard={() => addedToCard(item.id)}/>\n//                 })\n//             }\n//         </ul>\n//     )\n// };\n//\n// export default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(MenuList));","import MenuList from './menu-list.jsx';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport {connect} from \"react-redux\";\nimport {deleteFromCard} from \"../../actions\";\nimport WithRestoService from '../hoc';\n// import MenuListItem from \"../menu-list-item\";\n\nconst CartTable = ({arr, deleteFromCard, RestoService}) => {\n\n    if (arr.length !== 0) {\n        return <WithOrder arr={arr} deleteFromCard={deleteFromCard} RestoService={RestoService}/>\n    }\n\n    return WithoutOrders();\n\n};\n\nconst WithOrder = ({arr, deleteFromCard, RestoService}) => {\n    return(\n        <>\n            <div className=\"cart__title\">Ваш заказ:</div>\n            <div className=\"cart__list\">\n                {\n                    arr.map(item => {\n                        const {title, price, url, id, qtty} = item;\n\n                        return(\n                            <div key={id} className=\"cart__item\">\n                                <img src={url} className=\"cart__item-img\" alt={title}></img>\n                                <div className=\"cart__item-title\">{title}</div>\n                                <div className=\"cart__item-price\">{price}$</div>\n                                <div onClick={() => deleteFromCard(id)} className=\"cart__close\">&times;</div>\n                                <div className='cart__order'>\n                                    <div className='cart__quantity'>{qtty}</div>\n                                    <div className='cart__quantity cart__counter'>{price * qtty}$</div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <button onClick = {() => {RestoService.setOrder( generateOrder(arr))} } className = \"cart__btn-order\">Оформить заказ</button>\n        </>\n    )\n};\n\nconst WithoutOrders = () => {\n    return(\n        <div className=\"cart__title\">Корзина пуста :(</div>\n    )\n};\n\nconst generateOrder = (items) => {\n    const newOrder = items.map(item => {\n        return {\n            id: item.id,\n            qtty: item.qtty\n        }\n    })\n    return newOrder;\n}\n\nconst mapStateToProps = ({items}) => {\n    return {\n        arr: items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteFromCard: (id) => {\n            dispatch(deleteFromCard(id));\n        },\n    }\n};\n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(CartTable));\n// export default connect(mapStateToProps, mapDispatchToProps)(CartTable);","import CartTable from './cart-table.jsx';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","export default __webpack_public_path__ + \"static/media/404.1062f5e4.png\";","import React from 'react';\nimport './style/notFound.css'\nimport img from './img/404.png'\nimport {Link} from 'react-router-dom';\n\nconst NotFound = () => {\n    return (\n        <div className='not-found'>\n            <img src={img} alt='not found'/>\n            <Link to='/' className='not-found-link'>Go to home page</Link>\n        </div>\n    )\n};\n\nexport {NotFound};","export default __webpack_public_path__ + \"static/media/shopping-cart-solid.f0d47d21.svg\";","import AppHeader from './app-header.jsx';\n\nexport default AppHeader;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport './app-header.scss';\nimport {Link} from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst AppHeader = ({total, totalPrice}) => {\n    return (\n        <header className=\"header\">\n            <Link className=\"header__link\" to=\"/\">\n                Menu\n            </Link>\n            <Link className=\"header__link\" to=\"/card\">\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {totalPrice} $\n            </Link>\n        </header>\n    )\n};\n\nconst mapStateToProps = ({totalPrice}) => {\n    return{\n        totalPrice\n    }\n}\n\nexport default connect(mapStateToProps)(AppHeader);\n// export default AppHeader;","import React, {Component} from 'react';\nimport '../menu-list-item/menu-list-item.scss'\nimport WithRestoService from \"../hoc\";\nimport {connect} from \"react-redux\";\nimport {menuError, menuLoaded, menuRequested} from \"../../actions\";\nimport Error from \"../error\";\nimport Spinner from \"../spinner\";\n\nclass GetProduct extends Component{\n    componentDidMount() {\n        const {RestoService, menuLoaded, menuRequested, menuError} = this.props;\n\n        menuRequested();\n\n        RestoService.getMenuItems()\n            .then(result => menuLoaded(result))\n            .catch(() => menuError())\n    }\n\n    render() {\n        const {menuItems, loading, error, productCard} = this.props;\n\n        if (error) return <Error />\n        if (loading) return <Spinner />\n\n        return (\n            <View menuItems={menuItems} productCard={productCard}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        menuLoaded: (newMenu) => {\n            dispatch(menuLoaded(newMenu));\n        },\n        menuRequested: () => {\n            dispatch(menuRequested());\n        },\n        menuError: () => {\n            dispatch(menuError());\n        },\n    }\n};\n\nconst View = ({menuItems, productCard}) => {\n\n    return(\n        <ul className=\"menu__list\">\n            {\n                menuItems.map(item => {\n                    if (item.id === productCard) {\n                        return (\n                            <li className=\"menu__item\" key={item.id}>\n                                <div className='menu__title'>{item.title}</div>\n                                <img className=\"menu__img\" src={item.url} alt={item.title}></img>\n                                <div className=\"menu__category\">Category: <span>{item.category}</span></div>\n                                <div className=\"menu__price\">Price: <span>{item.price}$</span></div>\n                                <button className=\"menu__btn\">Add to cart</button>\n                            </li>\n                        )\n                    }\n                    else return null;\n                })\n            }\n        </ul>\n    )\n};\n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(GetProduct));","import React from \"react\";\nimport GetProduct from \"../technical/getProduct\";\n\nclass CesarSalad extends React.Component {\n\n    render() {\n        const cardNumber = this.props.location.pathname.replace('/', '');\n\n        return(\n            <GetProduct productCard={Number(cardNumber)}/>\n        )\n    }\n}\n\nexport default CesarSalad;","import React from \"react\";\nimport GetProduct from \"../technical/getProduct\";\n\nconst PizzaMargherita = (props) => {\n    const cardNumber = props.location.pathname.replace('/', '');\n\n    return(\n        <GetProduct productCard={Number(cardNumber)}/>\n    )\n};\n\nexport default PizzaMargherita;","import React from \"react\";\nimport GetProduct from \"../technical/getProduct\";\n\nconst PizzaNapoletana = (props) => {\n    const cardNumber = props.location.pathname.replace('/', '');\n\n    return(\n        <GetProduct productCard={Number(cardNumber)}/>\n    )\n};\n\nexport default PizzaNapoletana;","import React from \"react\";\nimport GetProduct from \"../technical/getProduct\";\n\nconst GreeceSalad = (props) => {\n    const cardNumber = props.location.pathname.replace('/', '');\n\n    return(\n        <GetProduct productCard={Number(cardNumber)}/>\n    )\n};\n\nexport default GreeceSalad;","import React from \"react\";\nimport GetProduct from \"../technical/getProduct\";\n\nconst CowboySteak = (props) => {\n    const cardNumber = props.location.pathname.replace('/', '');\n\n    return(\n        <GetProduct productCard={Number(cardNumber)}/>\n    )\n};\n\nexport default CowboySteak;","export default __webpack_public_path__ + \"static/media/food-bg.fd26761e.jpg\";","import App from './app.jsx';\n\nexport default App;","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\n\nimport {MainPage, CartPage, NotFound} from '../pages';\nimport AppHeader from '../app-header';\nimport {CesarSalad, CowboySteak, GreeceSalad, PizzaMargherita, PizzaNapoletana} from \"../products\";\n// import ViewProductsCard from \"../technical/viewProductCard\";\n\nimport Background from './food-bg.jpg';\n\nconst App = () => {\n    return (\n        <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\n            <AppHeader total={50}/>\n            <Switch>\n                <Route path='/' exact component={MainPage}/>\n                <Route path='/restaurant-menu-react-redux-spa' exact component={MainPage}/>\n                <Route path='/card' exact component={CartPage}/>\n\n                <Route path='/1' exact component={CesarSalad}/>\n                <Route path='/2' exact component={PizzaMargherita}/>\n                <Route path='/3' exact component={PizzaNapoletana}/>\n                <Route path='/4' exact component={GreeceSalad}/>\n                <Route path='/5' exact component={CowboySteak}/>\n\n                {/*<ViewProductsCard arr={[*/}\n                {/*    CesarSalad,*/}\n                {/*    PizzaMargherita,*/}\n                {/*    PizzaNapoletana,*/}\n                {/*    GreeceSalad,*/}\n                {/*    CowboySteak*/}\n                {/*]}/>*/}\n\n                <Route exact component={NotFound}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App;","import ErrorBoundry from './error-boundry.jsx';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch() {\n        this.setState({error: true})\n    }\n\n    render() {\n        const {error} = this.state;\n\n        if (error) return <Error />\n\n        //props.children - рендер всего, что внутри <ErrorBoundry />\n        else return this.props.children\n    }\n}","const DataDB = () => {\n    return(\n        {\n            \"menu\": [\n                {\n                    \"title\": \"Cesar salad\",\n                    \"price\": 12,\n                    \"url\": \"https://static.1000.menu/img/content/21458/-salat-cezar-s-kr-salat-cezar-s-krevetkami-s-maionezom_1501173720_1_max.jpg\",\n                    \"category\": \"salads\",\n                    \"id\": 1\n                },\n                {\n                    \"title\": \"Pizza Margherita\",\n                    \"price\": 10,\n                    \"url\": \"https://www.academiabarilla.it/wp-content/uploads/2017/07/496-pizza-margherita_2.jpg\",\n                    \"category\": \"pizza\",\n                    \"id\": 2\n                },\n                {\n                    \"title\": \"Pizza Napoletana\",\n                    \"price\": 13,\n                    \"url\": \"https://www.pizzanapoletana.org/struttura/pagine_bicolor/mobile/decalogo_avpn_1.jpg\",\n                    \"category\": \"pizza\",\n                    \"id\": 3\n                },\n                {\n                    \"title\": \"Greece salad\",\n                    \"price\": 8,\n                    \"url\": \"https://assets.epicurious.com/photos/576454fb42e4a5ed66d1df6b/master/pass/greek-salad.jpg\",\n                    \"category\": \"salads\",\n                    \"id\": 4\n                },\n                {\n                    \"title\": \"Cowboy Steak\",\n                    \"price\": 25,\n                    \"url\": \"https://i.cbc.ca/1.4491288.1516208229!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_780/cowboysteak.jpg\",\n                    \"category\": \"meat\",\n                    \"id\": 5\n                }\n            ]\n        }\n    )\n};\n\nexport default DataDB;","import DataDB from \"../components/json/db\";\n\nexport default class RestoService {\n\n    getDataDB() {\n        return DataDB();\n    }\n\n    _apiBase = 'http://localhost:3000';\n\n    async getResource(url) {\n        const response = await fetch(`${this._apiBase}${url}`);\n\n        if (!response.ok){\n            throw new Error(`Could not fetch ${url}, received ${response.status}`);\n        }\n\n        return await response.json();\n    }\n\n    async getMenuItems() {\n        return await this.getResource(`/menu/`)\n    }\n\n    async setOrder(order) {\n        const number = await this.getOrderNumber();\n        const newOrder = {\n            id: number,\n            order: order\n        }\n        const response = await fetch(`${this._apiBase}/orders`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(newOrder)\n        });\n        if (!response.ok){\n            throw new Error('json error');\n        }\n    }\n\n    async getOrderNumber(){\n        const res = await this.getResource('/orders/');\n        const orderNumber = res.length+1;\n\n        return orderNumber\n    }\n}","const initialState = {\n    menu: [],\n    loading: true,\n    error: false,\n    items: [],\n    totalPrice: 0,\n    quantity: 0\n}\n\nconst reducer = (state=initialState, actions) => {\n    switch (actions.type) {\n        case 'MENU_LOADED':\n            return {\n                ...state,\n                menu: actions.payload,\n                loading: false,\n                error: false\n            };\n\n        case 'MENU_REQUESTED':\n            return {\n                ...state,\n                // menu: state.menu,\n                loading: true,\n                error: false\n            };\n\n        case 'MENU_ERROR':\n            return {\n                ...state,\n                // menu: state.menu,\n                // loading: state.loading,\n                error: true\n            };\n\n        case 'ITEM_ADD_TO_CARD':\n            const addId = actions.payload,\n                addItem = state.menu[addId -1];\n                // item = state.menu.find(item => item.id === thisId);\n\n            const itemInd = state.items.findIndex(item => item.id === addId);\n            if (itemInd >= 0){\n                const itemInState = state.items.find(item => item.id === addId);\n                const newItem = {\n                    ...itemInState,\n                    qtty: ++itemInState.qtty\n                }\n                return {\n                    ...state,\n                    items: [\n                        ...state.items.slice(0, itemInd),\n                        newItem,\n                        ...state.items.slice(itemInd + 1)\n                    ],\n                    totalPrice: state.totalPrice + newItem.price\n                }\n\n            }\n\n            const newItem = {\n                title: addItem.title,\n                price: addItem.price,\n                url: addItem.url,\n                category: addItem.category,\n                id: addItem.id,\n                qtty: 1\n            }\n\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    newItem,\n                ],\n                totalPrice: state.totalPrice + newItem.price\n\n            };\n\n            // case 'ITEM_ADD_TO_CARD':\n            // const addId = actions.payload,\n            //     addItem = state.menu[addId -1];\n            //     // item = state.menu.find(item => item.id === thisId);\n            //\n            // const newItem = {\n            //     title: addItem.title,\n            //     price: addItem.price,\n            //     url: addItem.url,\n            //     category: addItem.category,\n            //     id: addItem.id\n            // }\n            //\n            // return {\n            //     ...state,\n            //     items: [\n            //         ...state.items,\n            //         newItem,\n            //     ],\n            //     quantity: state.quantity + 10\n            //\n            // };\n\n        case 'ITEM_REMOVE_FROM _CARD':\n            const arrWithout = [],\n                removeId = actions.payload;\n\n            const itemIndex = state.items.findIndex(item => item.id === removeId)\n            const price = state.items[itemIndex]['price'] * state.items[itemIndex]['qtty'];\n\n\n            state.items.forEach(item => {\n                if (item.id !== removeId) arrWithout.push(item)\n            })\n\n            return {\n                ...state,\n                items: arrWithout,\n                totalPrice: state.totalPrice - price\n            };\n\n        default: return state;\n    }\n};\n\nexport default reducer;","import {createStore} from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport ErrorBoundry from \"./components/error-boundry\";\nimport RestoService from \"./services/resto-service\";\nimport RestoServiceContext from \"./components/resto-service-context\";\nimport store from \"./store\";\n\n\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\n// Provider store={store} - из react-redux\n// ErrorBoundry - граница ошибок\n// RestoServiceContext.Provider - встроенная в React функция\n// Router - bp react-router-dom для ссылок\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n    , document.getElementById('root')\n);\n\n"],"sourceRoot":""}